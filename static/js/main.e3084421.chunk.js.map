{"version":3,"sources":["components/Statistics.js","components/InfoPanel.js","components/MainMap.js","map_style.js","App.js","serviceWorker.js","index.js"],"names":["Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","designations","designation","data","current","currentAlternative","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","features","Symbol","iterator","next","done","feature","value","properties","err","return","Math","trunc","toLocaleString","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this2","designationsListEntries","keys","map","d","react_default","a","createElement","Fragment","key","prettyName","total","className","totalForSale","Component","alternatives","defaultContainer","_ref","children","InfoPanel","_changeAlternative","event","setState","loading","changeAlternative","target","Container","containerComponent","settings","react_spinners","sizeUnit","size","color","Form","as","defaultValue","onChange","alt","components_Statistics","href","OG-NoSale","OG-NSO","OG-CSU","OG-TL","OG-SaleSTC","MainMap","viewport","latitude","longitude","zoom","map_style","mapStyle","style_set","fillColor","fillOpacity","esm","assign","width","height","onViewportChange","mapboxApiAccessToken","components_InfoPanel","derivedState","layers","get","layer","id","setIn","set","dataLayer_template","fromJS","source","type","interactive","paint","fill-color","property","stops","fill-opacity","layout","visibility","defaultMapStyle","MAP_STYLE","ALTERNATIVES","Alternative B","Alternative C","Alternative D1","Alternative D2","App","programArea","filterUpdateKey","loadProgramArea","loadAlternatives","triggerFilterUpdate","bind","assertThisInitialized","newAlt","fetch","response","json","c","default","console","log","_context","t0","altsData","resp1","resp2","resp3","resp4","_context2","alts_layers","alts_sources","dataLayer","push","attribution","concat","dataLayers","dataSources","src_components_MainMap","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3084421.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Statistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      designations: this.props.designations || []\n    };\n  }\n\n  total(designation) {\n    if (!this.props.data) {\n      return 0;\n    }\n    const current = this.props.data[this.props.currentAlternative];\n    var result = 0;\n    for (const feature of current.features) {\n      if (feature.properties.designation === designation) {\n        result += feature.properties[\"GIS_Acres\"];\n      }\n    }\n    return Math.trunc(result).toLocaleString();\n  }\n\n  totalForSale() {\n    if (!this.props.data) {\n      return 0;\n    }\n    const current = this.props.data[this.props.currentAlternative];\n    var result = 0;\n    for (const feature of current.features) {\n      if (feature.properties.designation !== \"OG-NoSale\") {\n        result += feature.properties[\"GIS_Acres\"]\n      }\n    }\n    return Math.trunc(result).toLocaleString();\n  }\n\n  render() {\n    const designationsListEntries = Object.keys(this.state.designations).map((d) => (\n      <React.Fragment key={d}>\n        <dt>{this.state.designations[d].prettyName}</dt>\n        <dd>{this.total(d)}</dd>\n      </React.Fragment>\n    ));\n    return (\n      <React.Fragment>\n        <h4>Statistics</h4>\n        <h5>Total Acres Under Each Designation</h5>\n        <dl className=\"dl-horizontal\">\n          { designationsListEntries }\n        </dl>\n        <h5>Total Acres for Sale: {this.totalForSale()}</h5>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, {Component} from \"react\";\nimport Control from 'react-leaflet-control';\nimport { Form} from 'react-bootstrap';\nimport Statistics from './Statistics.js';\nimport {ClipLoader} from 'react-spinners'\nimport { css } from '@emotion/core';\n\n\nconst alternatives = [\"Alternative B\", \"Alternative C\", \"Alternative D1\", \"Alternative D2\"];\n\nconst defaultContainer =  ({children}) => <div className=\"control-panel\">{children}</div>;\n\n\n\n\nclass InfoPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state =  {\n      loading : this.props.loading\n    }\n  }\n\n  _changeAlternative = event => {\n    this.setState({loading: true});\n    this.props.changeAlternative(event.target.value);\n  }\n\n\n  render() {\n    const Container = this.props.containerComponent || defaultContainer;\n    const {settings} = this.props;\n\n    return (\n      <Container>\n        <h3>\n          <ClipLoader\n            sizeUnit={\"px\"}\n            size={20}\n            color={'#123abc'}\n            loading={this.props.loading}\n          />\n          ANWR EIS Alternatives</h3>\n        <p>Map showing land use designations for {this.props.currentAlternative}</p>\n\n        <div>Choose another: <Form as=\"select\" defaultValue={this.props.currentAlternative} onChange={this._changeAlternative}>\n        { alternatives.map((alt) => (<option key={alt}>{alt}</option>)) }\n        </Form></div>\n\n        <hr />\n        <Statistics currentAlternative={this.props.currentAlternative} designations={this.props.designations} data={this.props.data} />\n\n        <small>Map by <a href=\"http://www.nicholasgottlieb.com/\">Nick Gottlieb</a> and <a href=\"http://www.anthonycannistra.com\">Tony Cannistra</a>. <a href=\"https://www.github.com/ngottlieb/anwr-draft-eis-visualization\">Code</a>.</small>\n      </Container>\n    );\n  }\n}\n\nexport default InfoPanel;\n","import React, {Component} from \"react\";\nimport ReactMapGL from 'react-map-gl';\nimport Control from \"react-leaflet-control\";\nimport InfoPanel from \"./InfoPanel.js\";\nimport {fromJS} from \"immutable\";\nimport \"./MainMap.css\";\n\n\nconst designations = {\n  \"OG-NoSale\": {\n    prettyName: \"Not For Sale\",\n    color: \"#7fc97f\"\n  },\n  \"OG-NSO\": {\n    prettyName: \"No Surface Occupancy\",\n    color: \"#beaed4\"\n  },\n  \"OG-CSU\": {\n    prettyName: \"Controlled Surface Use\",\n    color: \"#fdc086\"\n  },\n  \"OG-TL\": {\n    prettyName: \"Timing Limitations\",\n    color: \"#ffff99\"\n  },\n  \"OG-SaleSTC\": {\n    prettyName: \"Standard Terms and Conditions\",\n    color: \"#f0027f\"\n  }\n};\n\n// redundant\nconst designation_colors = [\n  [\"OG-NoSale\" ,  \"#7fc97f\"],\n  [\"OG-NSO\", \"#beaed4\"],\n  [\"OG-CSU\", \"#fdc086\"],\n  [\"OG-TL\", \"#ffff99\"],\n  [\"OG-SaleSTC\", \"#f0027f\"]\n];\n\n\nconst alt_colnames = {\n  \"Alternative B\" : \"Alt_B\",\n  \"Alternative C\" : \"Alt_C\",\n  \"Alternative D1\" : \"Alt_D1\",\n  \"Alternative D2\" : \"Alt_D2\"\n}\n\nclass MainMap extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   position: [69.85, -144],\n    //   zoom: 8,\n    // };\n\n\n    this.state = {\n      viewport : {\n        latitude: 69.85,\n        longitude: -144,\n        zoom: 7\n      },\n      map_style : this.props.mapStyle,\n      currentAlternative: this.props.currentAlternative,\n      style_set: false,\n      loading: this.props.loading\n    }\n  }\n\n\n  baseMapStyle(feature) {\n    return {\n      color: \"rgb(49, 130, 189)\",\n      fillColor: null,\n      fillOpacity: 0,\n    };\n  }\n\n\n    static getDerivedStateFromProps(props, state) {\n      var derivedState = {}\n\n      if(!state.style_set){\n\n        if(props.mapStyle != null){\n\n          derivedState['map_style'] = props.mapStyle\n          derivedState['style_set'] = true\n          derivedState['loading'] = false\n          return(derivedState)\n        }\n      }\n\n      if(state.currentAlternative !== props.currentAlternative){\n\n\n        const layers = state.map_style.get('layers')\n            .map(layer => {\n\n              const id = layer.get('id');\n              if (id === state.currentAlternative) {\n                return layer.setIn(['layout', 'visibility'], 'none');\n              }\n\n              if (id === props.currentAlternative) {\n                return layer.setIn(['layout', 'visibility'], 'visible')\n              }\n\n              return layer;\n            });\n\n\n        derivedState['map_style'] = state.map_style.set('layers', layers)\n        derivedState['currentAlternative'] = props.currentAlternative\n      }\n\n\n\n      return(derivedState)\n    }\n\n\n\n  render() {\n\n    return (\n\n      <ReactMapGL\n        {...this.state.viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle = {this.state.map_style}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapboxApiAccessToken =  'pk.eyJ1IjoiYWNhbm5pc3RyYSIsImEiOiJLWVM2RWhJIn0.TputXxRYBUPh-vjDg6_TFA'>\n        <InfoPanel\n            loading = {this.state.loading}\n            currentAlternative={this.props.currentAlternative}\n            changeAlternative={this.props.changeAlternative}\n            data={this.props.data}\n            designations={designations}\n        />\n      </ReactMapGL>\n\n    );\n  }\n}\n\nexport default MainMap;\n","import {fromJS} from 'immutable';\nimport MAP_STYLE from \"./outside-style.json\"\n\nexport const dataLayer_template = fromJS({\n  id : null,\n  source : null,\n  type : 'fill',\n  interactive: 'true',\n  paint: {\n    'fill-color': {\n      'property' : 'designation',\n      'type': 'categorical',\n      stops : [\n        [\"OG-NoSale\" ,  \"#7fc97f\"],\n        [\"OG-NSO\", \"#beaed4\"],\n        [\"OG-CSU\", \"#fdc086\"],\n        [\"OG-TL\", \"#ffff99\"],\n        [\"OG-SaleSTC\", \"#f0027f\"]\n      ]\n    },\n    'fill-opacity' : 0.8\n  },\n  layout: {\n    visibility: 'none'\n  }\n});\n\nexport const defaultMapStyle = fromJS(MAP_STYLE)\n","import React, {Component} from \"react\";\nimport {fromJS} from 'immutable';\nimport \"./App.css\";\nimport MainMap from \"./components/MainMap.js\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {dataLayer_template, defaultMapStyle} from './map_style.js'\n\nconst ALTERNATIVES = {\n  \"Alternative B\" : \"Alt_B\",\n  \"Alternative C\" : \"Alt_C\",\n  \"Alternative D1\" : \"Alt_D1\",\n  \"Alternative D2\" : \"Alt_D2\"\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      programArea: null,\n      data: null,\n      currentAlternative: \"Alternative B\",\n      filterUpdateKey: 0,\n      loading: true\n    };\n    this.loadProgramArea();\n    this.loadAlternatives();\n    this.triggerFilterUpdate = this.triggerFilterUpdate.bind(this);\n    this.changeAlternative = this.changeAlternative.bind(this);\n  }\n\n  triggerFilterUpdate() {\n    this.setState({\n      filterUpdateKey: this.state.filterUpdateKey + 1\n    });\n  }\n\n\n\n  changeAlternative(newAlt) {\n    this.setState({\n      currentAlternative: newAlt,\n      loading: true\n    });\n  }\n\n  async loadProgramArea() {\n    try {\n      const response = await fetch(\"./data/CoastalPlain_ProgramArea.json\");\n      const c = await response.json();\n      this.setState({\n        programArea: c.default,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async loadAlternatives() {\n    try {\n      var altsData = {};\n      var resp1 = await fetch(\"./data/alternative_b.json\");\n      altsData[\"Alternative B\"] = await resp1.json();\n      var resp2 = await fetch(\"./data/alternative_c.json\");\n      altsData[\"Alternative C\"] = await resp2.json();\n      var resp3 = await fetch(\"./data/alternative_d1.json\");\n      altsData[\"Alternative D1\"] = await resp3.json();\n      var resp4 = await fetch(\"./data/alternative_d2.json\");\n      altsData[\"Alternative D2\"] = await resp4.json();\n      this.setState({\n        data: altsData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var alts_layers = [];\n    var alts_sources = {};\n    for (var alt in ALTERNATIVES){\n\n      var dataLayer = dataLayer_template\n      .set('source', alt)\n      .set('id', alt)\n\n      if(alt === this.state.currentAlternative){\n        console.log(alt)\n        dataLayer = dataLayer.setIn(['layout', 'visibility'], 'visible')\n      }\n\n\n      alts_layers.push(dataLayer)\n\n\n      alts_sources[alt] = fromJS({\n        type: 'geojson',\n        data: altsData[alt],\n        attribution: \"<a href='https://eplanning.blm.gov/epl-front-office/eplanning/planAndProjectSite.do?methodName=dispatchToPatternPage&currentPageId=152115'>Alaska BLM</a>\"\n      })\n\n    }\n    var mapStyle = defaultMapStyle\n    .set('layers', defaultMapStyle.get('layers').concat(alts_layers))\n    .set('sources', defaultMapStyle.get('sources').concat(alts_sources))\n    //\n    // var mapStyle = fromJS({\n    //   version: 8,\n    //   sources: alts_sources,\n    //   layers: alts_layers\n    // });\n\n    this.setState({\n      dataLayers: alts_layers,\n      dataSources: alts_sources,\n      mapStyle: mapStyle\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainMap\n          loading = {this.state.loading}\n          programArea={this.state.programArea}\n          data={this.state.data}\n          currentAlternative={this.state.currentAlternative}\n          filterUpdateKey={this.state.filterUpdateKey}\n          changeAlternative={this.changeAlternative}\n          mapStyle={this.state.mapStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}