{"version":3,"sources":["components/Statistics.js","components/InfoPanel.js","components/MainMap.js","map_style.js","App.js","serviceWorker.js","index.js"],"names":["Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","designations","designation","data","current","currentAlternative","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","features","Symbol","iterator","next","done","feature","value","properties","err","return","Math","trunc","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","d","console","log","total","x","prettyName","replace","y","toLocaleString","fill","color","name","_this2","designationsListEntries","keys","map","_getDesignationDatum","allDesignations","filter","el","react_default","a","createElement","Fragment","width","height","victory_legend","standalone","orientation","style","victory_pie","padding","top","right","labelRadius","labels","fontSize","fontWeight","totalForSale","Component","alternatives","defaultContainer","_ref","children","className","InfoPanel","_changeAlternative","event","setState","loading","changeAlternative","target","_changeLayers","changeLayers","optionalLayers","Container","containerComponent","settings","react_spinners","sizeUnit","size","Form","as","defaultValue","onChange","alt","key","type","checked","components_Statistics","href","OG-NoSale","OG-NSO","OG-CSU","OG-TL","OG-SaleSTC","MainMap","viewport","latitude","longitude","zoom","map_style","mapStyle","style_set","fillColor","fillOpacity","esm","assign","onViewportChange","mapboxApiAccessToken","components_InfoPanel","derivedState","layers","get","layer","id","setIn","set","dataLayer_template","fromJS","source","interactive","paint","fill-outline-color","fill-color","property","stops","fill-opacity","layout","visibility","optionalLayer_template","defaultMapStyle","MAP_STYLE","ALL_LAYERS","Alternative B","Alternative C","Alternative D1","Alternative D2","optional_caribou","App","programArea","filterUpdateKey","caribou","visible","loadProgramArea","loadAlternatives","triggerFilterUpdate","bind","assertThisInitialized","newAlt","toggledLayer","isVisible","fetch","response","json","c","default","_context","t0","altsData","resp1","resp2","resp3","resp4","_context2","alts_layers","alts_sources","dataLayer","startsWith","push","attribution","concat","dataLayers","dataSources","src_components_MainMap","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a9be918.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {VictoryPie, VictoryChart, VictoryLegend} from 'victory';\n\n\n\nclass Statistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      designations: this.props.designations || []\n    };\n  }\n\n  total(designation) {\n    if (!this.props.data) {\n      return 0;\n    }\n    const current = this.props.data[this.props.currentAlternative];\n    var result = 0;\n    for (const feature of current.features) {\n      if (feature.properties.designation === designation) {\n        result += feature.properties[\"GIS_Acres\"];\n      }\n    }\n    return Math.trunc(result);\n  }\n\n  totalForSale() {\n    if (!this.props.data) {\n      return 0;\n    }\n    const current = this.props.data[this.props.currentAlternative];\n    var result = 0;\n    for (const feature of current.features) {\n      if (feature.properties.designation !== \"OG-NoSale\") {\n        result += feature.properties[\"GIS_Acres\"]\n      }\n    }\n    return Math.trunc(result);\n  }\n\n  _getDesignationDatum(d) {\n    console.log(this.total(d))\n    if(this.total(d) > 0){\n      return({\n        x: this.state.designations[d].prettyName.replace(\" \", '\\n'),\n        y: this.total(d).toLocaleString(),\n        fill: this.state.designations[d].color,\n        name: this.state.designations[d].prettyName.replace(\" \", '\\n')\n      })\n    }\n\n  }\n\n  render() {\n    var designationsListEntries = Object.keys(this.state.designations).map((d) => (\n      this._getDesignationDatum(d)\n      // <React.Fragment key={d}>\n      //   <dt>{this.state.designations[d].prettyName}</dt>\n      //   <dd>{this.total(d)}</dd>\n      // </React.Fragment>\n    ));\n    var allDesignations =\n    Object.keys(this.state.designations).map((d) => (\n      { name: this.state.designations[d].prettyName.replace(\" \", '\\n'),\n        fill : this.state.designations[d].color\n     }\n    ));\n    designationsListEntries = designationsListEntries.filter((el) => { return el != null;});\n    console.log(allDesignations)\n    return (\n      <React.Fragment>\n        <h5>Total Acres Under Each Designation</h5>\n        <svg width={350} height={250}>\n                <VictoryLegend standalone={false}\n                  x={190} y={0}\n                  width = {'100%'}\n                  height = {250}\n                  orientation = 'vertical'\n                  style={{\n                      data: {\n                        fill: (d) => d.fill,\n                      }\n                    }}\n                  data={allDesignations}\n                />\n                <VictoryPie standalone={false}\n                  width={300} height={200}\n                  padding={{\n                  \t  top: 25, right: 110,\n                  }}\n                  data={designationsListEntries}\n                  labelRadius = {30}\n                  labels = {(d) => d.y}\n                  style={{\n                        data: {\n                          fill: (d) => d.fill,\n                        },\n                        labels : {\n                          fill: 'black',\n                          fontSize: 10,\n                          fontWeight: 'bold'\n                        }\n                      }}\n                />\n        </svg>\n        <h5>Total Acres for Sale: {this.totalForSale().toLocaleString()}</h5>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, {Component} from \"react\";\nimport Control from 'react-leaflet-control';\nimport { Form} from 'react-bootstrap';\nimport Statistics from './Statistics.js';\nimport {ClipLoader} from 'react-spinners'\nimport { css } from '@emotion/core';\n\n\n\nconst alternatives = [\"Alternative B\", \"Alternative C\", \"Alternative D1\", \"Alternative D2\"];\n\nconst defaultContainer =  ({children}) => <div className=\"control-panel\">{children}</div>;\n\n\n\n\nclass InfoPanel extends Component {\n\n  constructor(props){\n    super(props);\n    console.log(props.optionalLayers)\n    this.state =  {\n      loading : this.props.loading\n    }\n  }\n\n\n\n  _changeAlternative = event => {\n    this.setState({loading: true});\n    this.props.changeAlternative(event.target.value);\n  }\n\n  _changeLayers = event => {\n    this.props.changeLayers(event.target);\n  }\n\n\n  render() {\n    const Container = this.props.containerComponent || defaultContainer;\n    const {settings} = this.props;\n\n    return (\n      <Container>\n        <h3>\n          <ClipLoader\n            sizeUnit={\"px\"}\n            size={20}\n            color={'#123abc'}\n            loading={this.props.loading}\n          />\n          ANWR EIS Alternatives</h3>\n        <p>Map showing land use designations for {this.props.currentAlternative}</p>\n\n        <div>Choose another: <Form as=\"select\" defaultValue={this.props.currentAlternative} onChange={this._changeAlternative}>\n        { alternatives.map((alt) => (<option key={alt}>{alt}</option>)) }\n        </Form></div>\n\n        <div>\n          <Form>\n            <label>Display Caribou Range:\n              <input\n                name = 'caribou'\n                type = 'checkbox'\n                checked = {this.props.optionalLayers['caribou']['visible']}\n                onChange = {this._changeLayers}\n              />\n            </label>\n          </Form>\n        </div>\n        <hr />\n        <Statistics currentAlternative={this.props.currentAlternative} designations={this.props.designations} data={this.props.data} />\n\n        <small>Map by <a href=\"http://www.nicholasgottlieb.com/\">Nick Gottlieb</a> and <a href=\"http://www.anthonycannistra.com\">Tony Cannistra</a>. <a href=\"https://www.github.com/ngottlieb/anwr-draft-eis-visualization\">Code</a>.</small>\n\n      </Container>\n    );\n  }\n}\n\nexport default InfoPanel;\n","import React, {Component} from \"react\";\nimport ReactMapGL from 'react-map-gl';\nimport Control from \"react-leaflet-control\";\nimport InfoPanel from \"./InfoPanel.js\";\nimport {fromJS} from \"immutable\";\nimport \"./MainMap.css\";\nimport _ from 'lodash';\n\n\nconst designations = {\n  \"OG-NoSale\": {\n    prettyName: \"Not For Sale\",\n    color: \"#7fc97f\"\n  },\n  \"OG-NSO\": {\n    prettyName: \"No Surface Occupancy\",\n    color: \"#beaed4\"\n  },\n  \"OG-CSU\": {\n    prettyName: \"Controlled Surface Use\",\n    color: \"#fdc086\"\n  },\n  \"OG-TL\": {\n    prettyName: \"Timing Limitations\",\n    color: \"#ffff99\"\n  },\n  \"OG-SaleSTC\": {\n    prettyName: \"Standard Terms and Conditions\",\n    color: \"#f0027f\"\n  }\n};\n\n// redundant\nconst designation_colors = [\n  [\"OG-NoSale\" ,  \"#7fc97f\"],\n  [\"OG-NSO\", \"#beaed4\"],\n  [\"OG-CSU\", \"#fdc086\"],\n  [\"OG-TL\", \"#ffff99\"],\n  [\"OG-SaleSTC\", \"#f0027f\"]\n];\n\n\nconst alt_colnames = {\n  \"Alternative B\" : \"Alt_B\",\n  \"Alternative C\" : \"Alt_C\",\n  \"Alternative D1\" : \"Alt_D1\",\n  \"Alternative D2\" : \"Alt_D2\"\n}\n\n\n\nclass MainMap extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   position: [69.85, -144],\n    //   zoom: 8,\n    // };\n    console.log(\"optional\", props.optionalLayers)\n\n    this.state = {\n      viewport : {\n        latitude: 69.85,\n        longitude: -144,\n        zoom: 7\n      },\n      map_style : this.props.mapStyle,\n      currentAlternative: this.props.currentAlternative,\n      optionalLayers : this.props.optionalLayers,\n      style_set: false,\n      loading: this.props.loading\n    }\n  }\n\n\n  baseMapStyle(feature) {\n    return {\n      color: \"rgb(49, 130, 189)\",\n      fillColor: null,\n      fillOpacity: 0,\n    };\n  }\n\n\n    static getDerivedStateFromProps(props, state) {\n      console.log('props', state)\n\n      var derivedState = {}\n\n      if(!state.style_set){\n\n        if(props.mapStyle != null){\n\n          derivedState['map_style'] = props.mapStyle\n          derivedState['style_set'] = true\n          derivedState['loading'] = false\n          return(derivedState)\n        }\n      }\n\n      if(state.currentAlternative !== props.currentAlternative){\n\n\n        const layers = state.map_style.get('layers')\n            .map(layer => {\n\n              const id = layer.get('id');\n              if (id === state.currentAlternative) {\n                return layer.setIn(['layout', 'visibility'], 'none');\n              }\n\n              if (id === props.currentAlternative) {\n                return layer.setIn(['layout', 'visibility'], 'visible')\n              }\n\n              return layer;\n            });\n\n\n        derivedState['map_style'] = state.map_style.set('layers', layers)\n        derivedState['currentAlternative'] = props.currentAlternative\n      }\n\n\n      // if(state.map_style != null ){\n      //   console.log('editing optional layers')\n      //   var interimLayers = null\n      //   try{\n      //     interimLayers = derivedState.map_style.get('layers')\n      //   }\n      //   catch(err){\n      //     interimLayers = state.map_style.get('layers')\n      //   }\n      //   const layers = interimLayers\n      //       .map(layer => {\n      //\n      //         const id = layer.get('id');\n      //         try{\n      //           // drop optional\n      //           var new_id = id.split('_')[1]\n      //           if (props.optionalLayers[new_id]['visible']) {\n      //             return layer.setIn(['layout', 'visibility'], 'visible');\n      //           }\n      //           else{\n      //             return layer.setIn(['layout', 'visibility'], 'none')\n      //           }\n      //\n      //           return layer;\n      //         } catch(err){\n      //           console.log(err)\n      //           return layer\n      //         }\n      //       });\n      //\n      //   derivedState['map_style'] = state.map_style.set('layers', layers)\n      //   console.log(\"done\")\n      // }\n      //\n\n      return(derivedState)\n    }\n\n  render() {\n\n    return (\n\n      <ReactMapGL\n        {...this.state.viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle = {this.state.map_style}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapboxApiAccessToken =  'pk.eyJ1IjoiYWNhbm5pc3RyYSIsImEiOiJLWVM2RWhJIn0.TputXxRYBUPh-vjDg6_TFA'>\n        <InfoPanel\n            loading = {this.state.loading}\n            currentAlternative={this.props.currentAlternative}\n            changeAlternative={this.props.changeAlternative}\n            changeLayers={this.props.changeLayers}\n            optionalLayers={this.props.optionalLayers}\n            data={this.props.data}\n            designations={designations}\n        />\n      </ReactMapGL>\n\n    );\n  }\n}\n\nexport default MainMap;\n","import {fromJS} from 'immutable';\nimport MAP_STYLE from \"./map-style-outdoors.json\"\n\nexport const dataLayer_template = fromJS({\n  id : null,\n  source : null,\n  type : 'fill',\n  interactive: 'true',\n  paint: {\n    'fill-outline-color': 'black',\n    'fill-color': {\n      'property' : 'designation',\n      'type': 'categorical',\n      stops : [\n        [\"OG-NoSale\" ,  \"#7fc97f\"],\n        [\"OG-NSO\", \"#beaed4\"],\n        [\"OG-CSU\", \"#fdc086\"],\n        [\"OG-TL\", \"#ffff99\"],\n        [\"OG-SaleSTC\", \"#f0027f\"]\n      ]\n    },\n    'fill-opacity' : 0.8\n  },\n  layout: {\n    visibility: 'none'\n  }\n});\n\nexport const optionalLayer_template = fromJS({\n  id : null,\n  source : null,\n  type : 'fill',\n  interactive: 'true',\n  paint: {\n    'fill-outline-color': 'black',\n    'fill-color': 'blue',\n    'fill-opacity' : 0.2\n  },\n  layout: {\n    visibility: 'none'\n  }\n});\n\nexport const defaultMapStyle = fromJS(MAP_STYLE)\n","import React, {Component} from \"react\";\nimport {fromJS} from 'immutable';\nimport \"./App.css\";\nimport MainMap from \"./components/MainMap.js\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {dataLayer_template, defaultMapStyle, optionalLayer_template} from './map_style.js'\n\nconst ALL_LAYERS = {\n  \"Alternative B\" : \"Alt_B\",\n  \"Alternative C\" : \"Alt_C\",\n  \"Alternative D1\" : \"Alt_D1\",\n  \"Alternative D2\" : \"Alt_D2\",\n  \"optional_caribou\": \"optional_caribou\"\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      programArea: null,\n      data: null,\n      currentAlternative: \"Alternative B\",\n      filterUpdateKey: 0,\n      loading: true,\n      optionalLayers: {\n        'caribou' : {\n          'visible' : false\n        }\n      }\n    };\n    this.loadProgramArea();\n    this.loadAlternatives();\n    this.triggerFilterUpdate = this.triggerFilterUpdate.bind(this);\n    this.changeAlternative = this.changeAlternative.bind(this);\n    this.changeLayers = this.changeLayers.bind(this);\n  }\n\n  triggerFilterUpdate() {\n    this.setState({\n      filterUpdateKey: this.state.filterUpdateKey + 1\n    });\n  }\n\n\n\n  changeAlternative(newAlt) {\n    this.setState({\n      currentAlternative: newAlt,\n      loading: true\n    });\n  }\n\n  changeLayers(toggledLayer) {\n    var optionalLayers = this.state.optionalLayers\n    var isVisible = this.state.optionalLayers[toggledLayer.name]['visible']\n    if(toggledLayer.value === 'on' && !isVisible){\n      optionalLayers[toggledLayer.name]['visible'] = true\n    }\n    if(toggledLayer.value === 'on' && isVisible){\n      optionalLayers[toggledLayer.name]['visible'] = false\n    }\n    this.setState({\n      optionalLayers : optionalLayers\n    });\n    console.log(optionalLayers)\n  }\n\n  async loadProgramArea() {\n    try {\n      const response = await fetch(\"./data/CoastalPlain_ProgramArea.json\");\n      const c = await response.json();\n      this.setState({\n        programArea: c.default,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async loadAlternatives() {\n    try {\n      var altsData = {};\n      var resp1 = await fetch(\"./data/alternative_b.json\");\n      altsData[\"Alternative B\"] = await resp1.json();\n      var resp2 = await fetch(\"./data/alternative_c_rewrite.geojson\");\n      altsData[\"Alternative C\"] = await resp2.json();\n      var resp3 = await fetch(\"./data/alternative_d1.json\");\n      altsData[\"Alternative D1\"] = await resp3.json();\n      var resp4 = await fetch(\"./data/alternative_d2.json\");\n      altsData[\"Alternative D2\"] = await resp4.json();\n      var caribou = await fetch(\"./data/caribou_range.json\")\n      altsData['optional_caribou'] = await caribou.json()\n      this.setState({\n        data: altsData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var alts_layers = [];\n    var alts_sources = {};\n    for (var alt in ALL_LAYERS){\n\n      var dataLayer = dataLayer_template\n      .set('source', alt)\n      .set('id', alt)\n\n      if (alt.startsWith(\"optional\")){\n        dataLayer = optionalLayer_template\n        .set('source', alt)\n        .set('id', alt)\n      }\n\n      if(alt === this.state.currentAlternative){\n        console.log(alt)\n        dataLayer = dataLayer.setIn(['layout', 'visibility'], 'visible')\n      }\n\n\n      alts_layers.push(dataLayer)\n\n\n      alts_sources[alt] = fromJS({\n        type: 'geojson',\n        data: altsData[alt],\n        attribution: \"<a href='https://eplanning.blm.gov/epl-front-office/eplanning/planAndProjectSite.do?methodName=dispatchToPatternPage&currentPageId=152115'>Alaska BLM</a>\"\n      })\n\n      if (alt.startsWith(\"optional\")){\n        alts_sources[alt] = alts_sources[alt].set('attribution', \"Other Sources\")\n      }\n\n    }\n    var mapStyle = defaultMapStyle\n    .set('layers', defaultMapStyle.get('layers').concat(alts_layers))\n    .set('sources', defaultMapStyle.get('sources').concat(alts_sources))\n    //\n    // var mapStyle = fromJS({\n    //   version: 8,\n    //   sources: alts_sources,\n    //   layers: alts_layers\n    // });\n\n    this.setState({\n      dataLayers: alts_layers,\n      dataSources: alts_sources,\n      mapStyle: mapStyle\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainMap\n          loading = {this.state.loading}\n          programArea={this.state.programArea}\n          data={this.state.data}\n          currentAlternative={this.state.currentAlternative}\n          filterUpdateKey={this.state.filterUpdateKey}\n          changeAlternative={this.changeAlternative}\n          changeLayers={this.changeLayers}\n          optionalLayers={this.state.optionalLayers}\n          mapStyle={this.state.mapStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}